datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Poll {
  createdAt DateTime @default(now())
  createdBy String?
  group     Group?   @relation(fields: [groupId], references: [id])
  groupId   String?
  id        String   @id @default(cuid())
  options   Json?
  question  String?
  updatedAt DateTime @updatedAt
}

model Group {
  createdAt   DateTime    @default(now())
  description String?
  id          String      @id @default(cuid())
  name        String?
  polls       Poll[]
  statistics  Statistic[]
  updatedAt   DateTime    @updatedAt
  user        User?       @relation(fields: [userId], references: [id])
  userId      String?
}

model Message {
  content   String?
  createdAt DateTime              @default(now())
  id        String                @id @default(cuid())
  mediaType EnumMessageMediaType?
  status    EnumMessageStatus?
  timestamp DateTime?
  updatedAt DateTime              @updatedAt
  user      User?                 @relation(fields: [userId], references: [id])
  userId    String?
}

model Statistic {
  createdAt     DateTime @default(now())
  group         Group?   @relation(fields: [groupId], references: [id])
  groupId       String?
  id            String   @id @default(cuid())
  totalMessages Int?
  updatedAt     DateTime @updatedAt
  user          User?    @relation(fields: [userId], references: [id])
  userId        String?
}

model User {
  createdAt  DateTime      @default(now())
  email      String?       @unique
  firstName  String?
  groups     Group[]
  id         String        @id @default(cuid())
  lastName   String?
  messages   Message[]
  password   String
  role       EnumUserRole?
  roles      Json
  statistics Statistic[]
  updatedAt  DateTime      @updatedAt
  username   String        @unique
}

enum EnumMessageMediaType {
  Option1
}

enum EnumMessageStatus {
  Option1
}

enum EnumUserRole {
  Option1
}
